---
- name: Install Docker & Compose from Docker repo, then run Nginx
  hosts: nginx_hosts
  become: true
  gather_facts: true

  vars:
    nginx_root: /opt/nginx
    nginx_html: /opt/nginx/html

  tasks:
    - name: Prereqs for APT over HTTPS and GPG
      ansible.builtin.apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - software-properties-common
        state: present
        update_cache: true

    - name: Ensure /etc/apt/keyrings exists
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: "0755"

    - name: Download Docker GPG key (ASCII)
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: "0644"

    - name: Convert Docker GPG key to binary .gpg (idempotent)
      ansible.builtin.command:
        cmd: gpg --dearmor -o /etc/apt/keyrings/docker.gpg /etc/apt/keyrings/docker.asc
      args:
        creates: /etc/apt/keyrings/docker.gpg

    - name: Map architecture for Docker repo
      ansible.builtin.set_fact:
        docker_arch: >-
          {{ 'amd64' if ansible_architecture in ['x86_64','amd64']
             else 'arm64' if ansible_architecture in ['aarch64','arm64']
             else ansible_architecture }}

    - name: Add Docker APT repository
      ansible.builtin.apt_repository:
        repo: "deb [arch={{ docker_arch }} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release | lower }} stable"
        filename: docker
        state: present
        update_cache: true

    - name: Install Docker CE + CLI + containerd + Buildx + Compose v2
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
        update_cache: true

    - name: Enable and start Docker
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: true

    - name: Create directories for Nginx content/compose
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      loop:
        - "{{ nginx_root }}"
        - "{{ nginx_html }}"

    - name: Place a simple index.html
      ansible.builtin.copy:
        dest: "{{ nginx_html }}/index.html"
        mode: "0644"
        content: |
          <html>
          <head><title>Nginx via Docker Compose</title></head>
          <body style="font-family:sans-serif">
            <h1>It works on {{ inventory_hostname }} ðŸŽ‰</h1>
          </body>
          </html>

    - name: Write docker-compose.yml
      ansible.builtin.copy:
        dest: "{{ nginx_root }}/docker-compose.yml"
        mode: "0644"
        content: |
          services:
            nginx:
              image: nginx:latest
              restart: unless-stopped
              ports:
                - "80:80"
              volumes:
                - "{{ nginx_html }}:/usr/share/nginx/html:ro"

    - name: Pull Nginx image
      ansible.builtin.command:
        cmd: docker compose pull
      args:
        chdir: "{{ nginx_root }}"

    - name: Start Nginx with Docker Compose
      ansible.builtin.command:
        cmd: docker compose up -d
      args:
        chdir: "{{ nginx_root }}"

